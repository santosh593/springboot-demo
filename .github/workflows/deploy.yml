name: CI/CD Pipeline - Spring Boot with Docker on EC2

on:
  push:
    branches:
      - main   # deploy only on main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Make mvnw executable
        run: chmod +x mvnw
      - name: Build Spring Boot app
        run: ./mvnw clean package -Ddemo=true
        
      - name: Log in to Docker Hub1
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/my-spring-app:latest .
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/my-spring-app:latest

      - name: Save Docker image
        run: docker save springboot-app | gzip > springboot-app.tar.gz

      - name: Copy image to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "springboot-app.tar.gz"
          target: "/home/${{ secrets.EC2_USER }}/"

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker load < springboot-app.tar.gz
            docker stop springboot-app || true
            docker rm springboot-app || true
            docker run -d --name springboot-app -p 8080:8080 springboot-app
